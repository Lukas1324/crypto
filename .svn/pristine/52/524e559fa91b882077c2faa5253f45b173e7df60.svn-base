package de.uniwue.gdp.crypto.basic;

import de.uniwue.gdp.crypto.Encryptor;

public class NeighborEncryptor implements Encryptor {
    @Override
    public String encode(String input) {
        String temp = "";
        int firstChar;
        int secondChar;
        int sum;
        ///Das letzte Char muss noch danach hinzugefügt werden
        for(int i = 0; i<input.length()-1; i++){
            if(input.charAt(i) == ' '){
                temp += ' ';
                continue;
            }
            firstChar = (int) input.charAt(i) -65;
            secondChar = (int) input.charAt(i+1) - 65;
            sum = firstChar + secondChar;
            if(sum>25){
                sum -= 25;
            }
            temp += (char) (sum + 65);
        }
        //letztes Char hinzufügen
        temp += input.charAt(input.length()-1);
        return temp;
    }

    @Override
    public String decode(String input) {
        String temp = "";
        int firstChar;
        int secondChar;
        int sum;
        int z = 0;
        temp += input.charAt(input.length()-1);
        for(int i = input.length()-2; i>0;i--){
            z++;
            firstChar = (int) temp.charAt(z);
            secondChar = (int) input.charAt(i);
            sum = secondChar - firstChar;
            if(sum<65){
                sum += 25;
            }
            temp += (char) sum;
        }
        RevertEncryptor r = new RevertEncryptor();
        temp = r.encode(temp);

        return temp;
    }

    @Override
    public String key() {
        return "NEI";
    }
}
